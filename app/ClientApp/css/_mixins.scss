@import "bootstrap-core";
@import "prefix";
@import "main-colors";
@import "flex-mixin";
@import "sizes-mixin";
@import "text-mixin";

@mixin vendor-prefix($name, $value) {
    @each $vendor in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
        #{$vendor}#{$name}: #{$value};
    }
}

/*img { 
  @include filter(grayscale, 100%);
}*/
@mixin filter($filter-type,$filter-amount) {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
}

/*pattern.svg
pattern.png
pattern@2x.png
$image-path: '../img' !default;*/
/*body {
  @include background-image('pattern');
}*/
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';

@mixin background-image($name, $size: false) {
    background-image: url(#{$image-path}/#{$name}.svg);

    @if($size) {
        background-size: $size;
    }

    .no-svg & {
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
            background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}

@mixin long-shadow($type, $color, $length, $fadeout: true, $skew: false, $direction: right) {
    $shadow: '';

    @if $skew == false or $type == text {
        @if $direction == right {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $color + ',';
            }
        }

        @if $direction == left {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $color + ',';
            }
        }
    }

    @if $fadeout == true {
        @for $i from 1 to $length - 1 {
            @if $type == text or $skew == false {
                @if $direction == right {
                    $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + rgba($color, 1 - $i / $length) + ',';
                }

                @if $direction == left {
                    $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + rgba($color, 1 - $i / $length) + ',';
                }
            }

            @if ($type == box) and $skew == true {
                @if $direction == right {
                    $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
                }

                @if $direction == left {
                    $shadow: $shadow + $i * -1 + 'px ' + $i + 'px 0 ' + $i * .2 + 'px ' + rgba($color, 1 - $i / $length) + ',';
                }
            }
        }

        $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba($color, 0);
    }

    @if $fadeout == false {
        @if $skew == true and ( $type == box ) {
            @for $i from 0 to $length - 1 {
                $shadow: $shadow + $i + 'px ' + $i + 'px 0 ' + $i * .1 + 'px ' + $color + ',';
            }
        }

        $shadow: $shadow + $length + 'px ' + $length + 'px 0 ' + rgba(0,0,0,0);
    }

    $shadow: unquote($shadow);

    @if $type == 'box' {
        box-shadow: $shadow;
    }

    @if $type == 'text' {
        text-shadow: $shadow;
    }
}


@mixin respond-to-media($min-width, $max-width) {
    @if($min-width == 0) {
        @media only screen and (max-width: $max-width) {
            @content;
        }
    }
    @else if($max-width == 0) {
        @media only screen and (min-width: $min-width) {
            @content;
        }
    }
    @else {
        @media only screen and (min-width: $min-width) and (max-width:$max-width) {
            @content;
        }
    }
}


$mdeia-small: 412px;
$mdeia-medium: 768px;
$mdeia-large: 1200px;



@mixin respond-to($media, $mediaTo: false,$mediaTree: false ) {
    @if $media == 0 {
        @include respond-to-media(0, $mdeia-small) {
            @content;
        }
    }
    @else if $media == 1 {
        @include respond-to-media($mdeia-small + 1, $mdeia-medium - 1px) {
            @content;
        }
    }
    @else if $media == 2 {
        @include respond-to-media( $mdeia-medium, $mdeia-large - 1) {
            @content;
        }
    }
    @else if $media == 3 {
        @include respond-to-media($mdeia-large, 0) {
            @content;
        }
    }

    @if $mediaTo!=false {
        @if $mediaTo == 0 {
            @include respond-to-media(0, $mdeia-small) {
                @content;
            }
        }
        @else if $mediaTo == 1 {
            @include respond-to-media($mdeia-small + 1, $mdeia-medium - 1px) {
                @content;
            }
        }
        @else if $mediaTo == 2 {
            @include respond-to-media( $mdeia-medium, $mdeia-large - 1) {
                @content;
            }
        }
        @else if $mediaTo == 3 {
            @include respond-to-media($mdeia-large, 0) {
                @content;
            }
        }
    }

    @if $mediaTree!=false {
        @if $mediaTree == 0 {
            @include respond-to-media(0, $mdeia-small) {
                @content;
            }
        }
        @else if $mediaTree == 1 {
            @include respond-to-media($mdeia-small + 1, $mdeia-medium - 1px) {
                @content;
            }
        }
        @else if $mediaTree == 2 {
            @include respond-to-media( $mdeia-medium, $mdeia-large - 1) {
                @content;
            }
        }
        @else if $mediaTree == 3 {
            @include respond-to-media($mdeia-large, 0) {
                @content;
            }
        }
    }
}




@mixin respond-to-orientation() {
    @media only screen and (orientation: landscape) {
        @content;
    }
}



@mixin custom-webkit-skroller($width: 5px,$border-radius: 10px, $thumb-background: $blue,$thumb-shadow-color: rgba(0,0,0,1)) {
    ::-webkit-scrollbar {
        width: $width;
        height: $width;
    }

    ::-webkit-scrollbar-track {
        box-shadow: inset 0 0 6px transparentize($thumb-shadow-color, 0.3);
        border-radius: $border-radius;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: $border-radius;
        background: $thumb-background;
        box-shadow: inset 0 0 6px $thumb-shadow-color;
    }

    ::-webkit-scrollbar-thumb:window-inactive {
        background: transparentize($thumb-background, 0.3);
    }
}

@mixin user-select($val:none) {
  -webkit-touch-callout: $val;
  -webkit-user-select: $val;
  -khtml-user-select: $val;
  -moz-user-select: $val;
  -ms-user-select: $val;
  user-select: $val;
}

@mixin webkit-autofill($shadow-color: #373e4a,$text-color: #fff) {
    input:-webkit-autofill,
    input:-webkit-autofill:hover,
    input:-webkit-autofill:focus,
    input:-webkit-autofill:active {
        -webkit-box-shadow: 0 0 0px 1000px $shadow-color inset !important;
        -webkit-text-fill-color: $text-color !important;
        background-color: $shadow-color;
    }
}


@mixin set-footer-to-page($page-name) {
    #{$page-name} {
        height: 100vh;
        @include flex-column();

        #footer {
            bottom: 0;
            margin: 0;
        }

        #main-container {
            flex: 1 0 auto;  
        }

        #site-footer {
            flex: 0 0 auto;
        }
    }
}
