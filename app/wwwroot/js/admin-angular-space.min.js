(function(n){"use strict";var t=Utils.ModelFactory;n.controller("spaceCtrl",["$scope","spaceService",function(n,t){this.$selectedType=null;this.spaceTypes=t.getSpaceTypes();this.contendData=null;this.showContentData=!1;this.typeSelectDisabled=!1;this.onSpaceTypeSelected=function(i){n.spaceCtrl.typeSelectDisabled=!0;t.getSpaceTypeItemsData(i.Name,function(t){console.log("data",{data:t,$scope:n});t?(n.spaceCtrl.contendData=t,n.spaceCtrl.showContentData=!0):n.spaceCtrl.showContentData=!1;n.spaceCtrl.typeSelectDisabled=!1})};this.filterName="";this.updateItemDisabled=!1;this.updateItem=function(i,r){n.spaceCtrl.updateItemDisabled=!0;t.updateItem(i,r,function(){n.spaceCtrl.updateItemDisabled=!1})};console.log("spaceCtrl",{$scope:n,spaceService:t})}]);n.controller("updateSpaceItemDialogCtrl",["$scope","$mdDialog","spaceService","$q","spaceItem",function(n,t,i,r,u){this.maxlength=1e3;this.spaceItem=u;this.model=_.cloneDeep(u.Translate);this.cancel=function(){console.log("cancel");t.cancel()};this.sendIsDisabled=!1;this.send=function(){var e,f;_.isEqual(n.ctrl.spaceItem.Translate,n.ctrl.model)?n.ctrl.cancel():(console.log("send"),n.ctrl.sendIsDisabled=!0,e=_.cloneDeep(u.Translate),u.Translate=n.ctrl.model,f=r.defer(),$.ajax({url:"adminSpace/UpdateDescription/",method:"POST",type:"json",data:Utils.XSRF.MakeIPostXsrf("spaceItem",u)}).then(function(n){n?f.resolve():f.reject()},f.reject),f.promise.then(t.hide,function(t){n.ctrl.spaceItem.Translate=e;i.$defaultError(t)}).finally(function(){n.ctrl.sendIsDisabled=!1}))};console.log("updateSpaceItemDialogCtrl",{$scope:n})}]);n.service("spaceService",["$q","$mdDialog",function(n,i){var r=this;this.$defaultError=Errors.$defaultErrorResponce;this.$spaceTypeNames=null;this.$spaceData={};this.typesData=function(){var n={};return n.Galaxy=t.INameIdModel(0,"Galaxy"),n.Sector=t.INameIdModel(1,"Sector"),n.Star=t.INameIdModel(2,"Star"),n.Planet=t.INameIdModel(3,"Planet"),n.Satellite=t.INameIdModel(4,"Satellite"),r.$spaceTypeNames=[n.Galaxy.Name,n.Sector.Name,n.Star.Name,n.Planet.Name,n.Satellite.Name],Utils.FreezeDeep(r.$spaceTypeNames),_.forEach(r.$spaceTypeNames,function(n){r.$spaceData[n]=null}),n}();this.getSpaceTypes=function(){return r.typesData};this.getSpaceTypeItemsData=function(t,i){var u=n.defer(),f=!0;r.$spaceData[t]?(f=!1,u.resolve(r.$spaceData[t])):$.ajax({url:"adminSpace/GetSpaceItems/",method:"POST",type:"json",data:Utils.XSRF.MakeIPostXsrf("mapType",t)}).then(u.resolve,u.reject);u.promise.then(function(n){f&&(console.log("request",{answer:n}),r.$spaceData[t]=n);i(r.$spaceData[t])},function(n){i(!1);r.$defaultError(n)})};this.updateItem=function(n,t,r){i.show({templateUrl:"update-space-item-dialog.tmpl",parent:angular.element(document.body),targetEvent:n,clickOutsideToClose:!1,fullscreen:!0,locals:{spaceItem:t},controller:"updateSpaceItemDialogCtrl",controllerAs:"ctrl"}).finally(r).then(angular.noop,angular.noop)}}])})(Utils.CoreApp.adminApp);